name: CI

on:
  push:
    paths:
      - 'archetypes/**'
      - 'content/**'
      - 'layouts/**'
      - 'static/**'
      - 'hugo.toml'
      - 'Dockerfile'
      - '.github/workflows/ci.yml'
    branches:
      - '**'
    tags:
      - '*.*.*'
  workflow_dispatch:

env:
  ARTIFACT_NAME: website
  DOCKER_REGISTRY_DOMAIN: ghcr.io
  DOCKER_IMAGE_NAME: website
  WEBSITE_URL: https://viral32111.com
  HUGO_VERSION: 0.115.2

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.HUGO_VERSION }}

      - name: Build
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: hugo

      - name: Validate HTML compliance
        uses: Cyb3r-Jak3/html5validator-action@v7.2.0
        with:
          root: public
          css: false

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: public

  docker:
    name: Docker
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY_DOMAIN }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Docker
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64

      - name: Create Docker image metadata
        id: metadata
        uses: docker/metadata-action@v4
        with:
          flavor: latest=true
          images: ${{ env.DOCKER_REGISTRY_DOMAIN }}/${{ github.repository_owner }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
          labels: |
            org.opencontainers.image.title=Website
            org.opencontainers.image.description=My personal website.
            com.docker.extension.publisher-url=${{ env.WEBSITE_URL }}

      - name: Setup Docker context directory
        run: |
          mkdir --verbose --parents context
          cp --verbose --archive public context/
          cp --verbose --archive nginx.conf context/

      - name: Build & push Docker image
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: Dockerfile
          context: context
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64
          provenance: false
          no-cache: true
          pull: true

      - name: Cleanup old Docker images
        if: ${{ github.event_name != 'pull_request' }}
        uses: snok/container-retention-policy@v2
        with:
          image-names: ${{ env.DOCKER_IMAGE_NAME }}
          cut-off: 0 seconds ago UTC
          keep-at-least: 0
          untagged-only: true
          account-type: personal
          token: ${{ secrets.PACKAGES_PERSONAL_ACCESS_TOKEN }}

  deploy:
    name: Deploy
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deploy-to-pages.outputs.page_url }}
    concurrency:
      group: github-pages
      cancel-in-progress: false
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: ${{ env.HUGO_VERSION }}

      - name: Setup GitHub Pages
        id: setup-pages
        uses: actions/configure-pages@v3

      - name: Build for GitHub Pages
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: hugo --baseURL ${{ steps.setup-pages.outputs.base_url }}

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deploy-to-pages
        uses: actions/deploy-pages@v2

      - name: Analyse with PageSpeed Insights
        uses: jakepartusch/psi-action@v1.3
        with:
          url: ${{ steps.deploy-to-pages.outputs.page_url }}
          threshold: 70
          strategy: desktop
          key: ${{ secrets.PAGE_SPEED_INSIGHTS_API_KEY }}

      #- name: Analyse with Mozilla Observatory
      #  run: |
      #    npm install --global observatory-cli
      #    observatory --zero --rescan --format report ${{ steps.deploy-to-pages.outputs.page_url }}

  release:
    name: Release
    runs-on: ubuntu-22.04
    needs: build
    if: ${{ github.ref_type == 'tag' }}
    permissions:
      contents: write
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: public

      - name: Bundle build artifact
        run: zip -r ${{ env.ARTIFACT_NAME }}.zip public

      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ github.ref_name }}
          files: ${{ env.ARTIFACT_NAME }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
